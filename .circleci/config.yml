version: 2.1

orbs:
  kubernetes: circleci/kubernetes@0.12.0
  aws-cli: circleci/aws-cli@2.0
  aws-eks: circleci/aws-eks@0.2.3
  
jobs:
  build_app:
    docker:
      - image: cimg/python:3.8.11
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "requirements.txt" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-
      - run:
            name: Install dependencies
            command: |
              make setup
              source devops/bin/activate
              make install
      - run:
            name: Lint source files
            command: |
              source devops/bin/activate
              make lint
      - save_cache:
            paths:
              - ./devops
            key: v1-dependencies-{{ checksum "requirements.txt" }}
          
  build_and_publish_docker_image:
    docker:
      - image: cimg/python:3.8.11
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run: 
          name: build image
          command: |
            echo "Docker ID and Image: $dockerpath"
            docker build -t $dockerpath .
      - run: 
          name: tag image
          command: |
            docker tag $dockerpath $dockerpath
      - run:
          name: login to dockerhub
          command: |
            docker login -u $dockerId -p $dockerPass
      - run:
          name: push image
          command: |
            docker push $dockerpath
            
  create_cluster:
    executor: aws-eks/python3
    steps:
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            sudo mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - aws-eks/create-cluster:
          cluster-name: capstone-hello-app
          node-type: t2.small
          
  test-cluster:
    executor: aws-eks/python3
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: capstone-hello-app
      - run:
          command: |
            kubectl get services
            kubectl get pods
            kubectl describe pods
            kubectl get nodes
            kubectl get deployment
            kubectl get services -o wide
          name: Test cluster
          
workflows:
  default:
    jobs:
      - build_app
      - build_and_publish_docker_image:
          requires:
            - build-app
      - create_cluster:
          requires:
            - build_and_publish_docker_image
      - test-cluster:
          requires:
            - create_cluster
    
version: 2.1

jobs:
  build-app:
    docker:
      - image: cimg/python:3.8.11
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "requirements.txt" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-
      - run:
            name: Install dependencies
            command: |
              make setup
              source devops/bin/activate
              make install
      - run:
            name: Lint source files
            command: |
              source devops/bin/activate
              make lint
      - save_cache:
            paths:
              - ./devops
            key: v1-dependencies-{{ checksum "requirements.txt" }}
          
  build_and_publish_docker_image:
    docker:
      - image: cimg/python:3.8.11
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run: 
          name: build image
          command: |
            echo "Docker ID and Image: $dockerpath"
            docker build -t $dockerpath .
      - run: 
          name: tag image
          command: |
            docker tag $dockerpath $dockerpath
      - run:
          name: login to dockerhub
          command: |
            docker login -u $dockerId -p $dockerPass
      - run:
          name: push image
          command: |
            docker push $dockerpath
          
  create_eks_cluster:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: install aws cli
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo unzip awscliv2.zip
            sudo ./aws/install
            sudo aws --version
      - run:
          name: install-eksctl
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            sudo eksctl version
      - run:
          name: create cluster
          command: |
            sudo aws eks describe-cluster --name $CLUSTER_NAME > /dev/null
            if [ $? -eq 0 ]
            then
              echo "Cluster already exists"
            else
              echo "Create Cluster"
              sudo eksctl create cluster --config-file=cluster.yml
            fi 
      - run:
          name: destroy cluster
          when: on_fail
          command: |
            sudo eksctl delete cluster --name $CLUSTER_NAME
            
  deploy_kubernetes_app:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: install aws cli
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo unzip awscliv2.zip
            sudo ./aws/install
            sudo aws --version
      - run:
          name: install-kubectl
          command: |
            sudo apt-get update
            sudo apt-get install -y apt-transport-https ca-certificates curl
            curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
            echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
            sudo apt-get update
            sudo apt-get install -y kubectl
      - run:
          name: connect to eks cluster
          command: | 
            sudo aws eks --region us-east-1 update-kubeconfig --name hello-app
            sudo kubectl get svc
      - run: 
          name: deploy app
          command: |
            sudo kubectl apply -f deployment.yml 
      - run:
          name: watch rollout
          command: | 
            sudo kubectl rollout status deployment.apps/udacity-capstone-deployment
      - run:
          name: rolling update
          command: |
            sudo kubectl set image deployment.apps/udacity-capstone-deployment udacity-capstone=$dockerpath
      - run:
          name: watch rollout
          command: | 
            sudo kubectl rollout status deployment.apps/udacity-capstone-deployment
      - run:
          name: list kubectl resources
          command: |
            echo "List Deployments:"
            sudo kubectl get deployments
            echo ""
            echo "List Services:"
            sudo kubectl get svc
            echo ""
            echo "List Pods:"
            sudo kubectl get pods
            
workflows:
  default:
    jobs:
      - build-app
      - build_and_publish_docker_image:
          requires:
            - build-app
      - create_eks_cluster:
          requires:
            - build_and_publish_docker_image
      - deploy_kubernetes_app:
          requires:
            - create_eks_cluster
    
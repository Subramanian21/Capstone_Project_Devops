version: 2.1

jobs:
  build-app:
    docker:
      - image: cimg/python:3.8.11
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "requirements.txt" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-
      - run:
            name: Install dependencies
            command: |
              make setup
              source devops/bin/activate
              make install
      - run:
            name: Lint source files
            command: |
              source devops/bin/activate
              make lint
      - save_cache:
            paths:
              - ./devops
            key: v1-dependencies-{{ checksum "requirements.txt" }}
          
  build_and_publish_docker_image:
    docker:
      - image: cimg/python:3.8.11
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run: 
          name: build image
          command: |
            echo "Docker ID and Image: $dockerpath"
            docker build -t $dockerpath .
      - run: 
          name: tag image
          command: |
            docker tag $dockerpath $dockerpath
      - run:
          name: login to dockerhub
          command: |
            docker login -u $dockerId -p $dockerPass
      - run:
          name: push image
          command: |
            docker push $dockerpath
          
  create_eks_cluster:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: install aws cli
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo unzip awscliv2.zip
            sudo ./aws/install
            aws --version
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set region $AWS_REGION
      - run:
          name: install-eksctl
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version
      - run:
          name: create cluster
          command: |
            eksctl create cluster --config-file=cluster.yml
      - run:
          name: destroy cluster
          when: on_fail
          command: |
            eksctl delete cluster --name $CLUSTER_NAME
            
  deploy_kubernetes_app:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: install aws cli
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo unzip awscliv2.zip
            sudo ./aws/install
            sudo aws --version
            sudo aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            sudo aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            sudo aws configure set region $AWS_REGION
      - run:
          name: install-kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin
      - run:
          name: connect to eks cluster
          command: | 
            aws eks --region us-east-1 update-kubeconfig --name $CLUSTER_NAME
            kubectl get svc
      - run: 
          name: deploy app
          command: |
            kubectl apply -f deployment.yml 
      - run:
          name: watch rollout
          command: | 
            kubectl rollout status deployment.apps/udacity-capstone-deployment
      - run:
          name: rolling update
          command: |
            kubectl set image deployment.apps/udacity-capstone-deployment udacity-capstone=$dockerpath
      - run:
          name: watch rollout
          command: | 
            kubectl rollout status deployment.apps/udacity-capstone-deployment
      - run:
          name: list kubectl resources
          command: |
            echo "List Deployments:"
            kubectl get deployments
            echo ""
            echo "List Services:"
            kubectl get svc
            echo ""
            echo "List Pods:"
            kubectl get pods
            
workflows:
  default:
    jobs:
      - build-app
      - build_and_publish_docker_image:
          requires:
            - build-app
      - create_eks_cluster:
          requires:
            - build_and_publish_docker_image
      - deploy_kubernetes_app:
          requires:
            - create_eks_cluster
    
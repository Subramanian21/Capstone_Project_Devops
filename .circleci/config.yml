version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.0
  kubernetes: circleci/kubernetes@1.0
  
jobs:
  build_app:
    docker:
      - image: cimg/python:3.8.11
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "requirements.txt" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-
      - run:
            name: Install dependencies
            command: |
              make setup
              source devops/bin/activate
              make install
      - run:
            name: Lint source files
            command: |
              source devops/bin/activate
              make lint
      - save_cache:
            paths:
              - ./devops
            key: v1-dependencies-{{ checksum "requirements.txt" }}
          
  build_and_publish_docker_image:
    docker:
      - image: cimg/python:3.8.11
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run: 
          name: build image
          command: |
            echo "Docker ID and Image: $dockerpath"
            docker build -t $dockerpath .
      - run: 
          name: tag image
          command: |
            docker tag $dockerpath $dockerpath
      - run:
          name: login to dockerhub
          command: |
            docker login -u $dockerId -p $dockerPass
      - run:
          name: push image
          command: |
            docker push $dockerpath
            
  deploy-application:
    executor: aws-eks/python3
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: capstone-hello-app-${CIRCLE_WORKFLOW_ID:0:7}
          install-kubectl: true
          aws-region: us-east-1
      - kubernetes/create-or-update-resource:
          resource-file-path: deployment.yml
          get-rollout-status: true
          resource-name: deployment/capstone-hello-app
          
  test-application:
        executor: aws-eks/python3
        steps:
          - aws-eks/update-kubeconfig-with-authenticator:
              cluster-name: capstone-hello-app-${CIRCLE_WORKFLOW_ID:0:7}
              install-kubectl: true
              aws-region: us-east-1
          - run:
              name: Wait for service to be ready
              command: |
                kubectl get pods
                kubectl get services
          
workflows:
  default:
    jobs:
      - build_app
      - build_and_publish_docker_image:
          requires:
            - build_app
      - aws-eks/create-cluster:
          cluster-name: capstone-hello-app-${CIRCLE_WORKFLOW_ID:0:7}
          aws-region: us-east-1
          requires:
            - build_and_publish_docker_image
      - deploy-application:
          requires:
            - aws-eks/create-cluster
      - test-application:
          requires:
            - deploy-application
    